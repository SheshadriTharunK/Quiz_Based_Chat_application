import socket
import threading

# Function to handle client connections
def handle_client(client_socket, address):
    print(f"Accepted connection from {address}")
    
    # Receive messages from the client and broadcast to other clients
    while True:
        message = client_socket.recv(1024).decode()
        if not message:
            break
        print(f"Received message from {address}: {message}")
        
        # Broadcast message to all other connected clients
        for client in clients:
            if client != client_socket:
                client.send(message.encode())
    
    # Remove client from the list and close the connection
    clients.remove(client_socket)
    client_socket.close()
    print(f"Connection from {address} closed")

# Create a TCP socket
server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

# Bind the socket to a specific address and port
server_socket.bind(("localhost", 5555))

# Listen for incoming connections
server_socket.listen(5)
print("Server is listening for connections...")

# List to keep track of connected clients
clients = []

# Accept incoming connections and spawn a new thread for each client
while True:
    client_socket, address = server_socket.accept()
    clients.append(client_socket)
    client_thread = threading.Thread(target=handle_client, args=(client_socket, address))
    client_thread.start()
